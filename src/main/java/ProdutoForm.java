/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
/**
 *
 * @author valen
 */
     public class ProdutoForm extends javax.swing.JFrame {

    /**
     * Creates new form ProdutoForm
     */
    public ProdutoForm() {
        initComponents();
       DefaultTableModel modelo = new DefaultTableModel(
        new Object[]{"ID", "Categoria", "Código", "Descrição", "Quantidade", "Preço Unitário"}, 0);
    tabelaProdutos.setModel(modelo);
}
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaProdutos = new javax.swing.JTable();
        btnSalvar = new javax.swing.JButton();
        btnAtualizar = new javax.swing.JButton();
        btnDeletar = new javax.swing.JButton();
        bntListar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtDescricao = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtCategoria = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtQuantidade = new javax.swing.JTextField();
        txtPrecoUnitario = new javax.swing.JTextField();

        tabelaProdutos.setFont(new java.awt.Font("Franklin Gothic Medium Cond", 0, 12)); // NOI18N
        tabelaProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelaProdutos);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnAtualizar.setText("Atualizar");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        btnDeletar.setText("Deletar");
        btnDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletarActionPerformed(evt);
            }
        });

        bntListar.setText("Listar");
        bntListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntListarActionPerformed(evt);
            }
        });

        jLabel1.setText("Código");

        txtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoActionPerformed(evt);
            }
        });

        jLabel2.setText("Descrição");

        jLabel3.setText("Categoria");

        jLabel4.setText("Quantidade");

        jLabel5.setText("Preço Unitário");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(btnSalvar)
                .addGap(18, 18, 18)
                .addComponent(btnAtualizar)
                .addGap(15, 15, 15)
                .addComponent(btnDeletar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bntListar)
                .addContainerGap(18, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtCategoria, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtDescricao, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtQuantidade, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtPrecoUnitario, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(158, 158, 158))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtPrecoUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar)
                    .addComponent(btnAtualizar)
                    .addComponent(btnDeletar)
                    .addComponent(bntListar))
                .addGap(97, 97, 97))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        // TODO add your handling code here:
        try {
    int categoria = Integer.parseInt(txtCategoria.getText());
    String codigo = txtCodigo.getText();
    String descricao = txtDescricao.getText();
    int quantidade = Integer.parseInt(txtQuantidade.getText());
    double precoUnitario = Double.parseDouble(txtPrecoUnitario.getText());

    java.sql.Connection conn = Conexao.conectar();
    String sql = "INSERT INTO produtos (categoria_id, codigo, descricao, quantidade, preco_unitario) VALUES (?, ?, ?, ?, ?)";
    java.sql.PreparedStatement stmt = conn.prepareStatement(sql);

    stmt.setInt(1, categoria);
    stmt.setString(2, codigo);
    stmt.setString(3, descricao);
    stmt.setInt(4, quantidade);
    stmt.setDouble(5, precoUnitario);

    stmt.executeUpdate();
    javax.swing.JOptionPane.showMessageDialog(null, "Produto cadastrado com sucesso!");

    stmt.close();
    conn.close();
    
    // Limpar campos depois de salvar
    txtCategoria.setText("");
    txtCodigo.setText("");
    txtDescricao.setText("");
    txtQuantidade.setText("");
    txtPrecoUnitario.setText("");

} catch (Exception e) {
    e.printStackTrace();
    javax.swing.JOptionPane.showMessageDialog(null, "Erro ao salvar: " + e.getMessage());
}
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void bntListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntListarActionPerformed
        // TODO add your handling code here:                                                                             
    try {
        java.sql.Connection conn = Conexao.conectar();
        String sql = "SELECT * FROM produtos";
        java.sql.PreparedStatement stmt = conn.prepareStatement(sql);
        java.sql.ResultSet rs = stmt.executeQuery();

        // Criar modelo da tabela
        javax.swing.table.DefaultTableModel modelo = new javax.swing.table.DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("Categoria ID");
        modelo.addColumn("Código");
        modelo.addColumn("Descrição");
        modelo.addColumn("Quantidade");
        modelo.addColumn("Preço Unitário");

        while (rs.next()) {
            modelo.addRow(new Object[]{
                rs.getInt("produtos_id"),
                rs.getInt("categoria_id"),
                rs.getString("codigo"),
                rs.getString("descricao"),
                rs.getInt("quantidade"),
                rs.getDouble("preco_unitario")
            });
        }

        tabelaProdutos.setModel(modelo);

        rs.close();
        stmt.close();
        conn.close();

    } catch (Exception e) {
        e.printStackTrace();
        javax.swing.JOptionPane.showMessageDialog(null, "Erro ao listar produtos: " + e.getMessage());
    } 
    }//GEN-LAST:event_bntListarActionPerformed

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        // TODO add your handling code here:                                       
    try {
        int categoria = Integer.parseInt(txtCategoria.getText());
        String codigo = txtCodigo.getText();
        String descricao = txtDescricao.getText();
        int quantidade = Integer.parseInt(txtQuantidade.getText());
        double precoUnitario = Double.parseDouble(txtPrecoUnitario.getText());

        Connection conn = Conexao.conectar();
        String sql = "UPDATE produtos SET categoria_id = ?, descricao = ?, quantidade = ?, preco_unitario = ? WHERE codigo = ?";
        PreparedStatement stmt = conn.prepareStatement(sql);

        stmt.setInt(1, categoria);
        stmt.setString(2, descricao);
        stmt.setInt(3, quantidade);
        stmt.setDouble(4, precoUnitario);
        stmt.setString(5, codigo);

        int linhasAfetadas = stmt.executeUpdate();
        if (linhasAfetadas > 0) {
            javax.swing.JOptionPane.showMessageDialog(null, "Produto atualizado com sucesso!");
        } else {
            javax.swing.JOptionPane.showMessageDialog(null, "Produto não encontrado para atualizar.");
        }

        stmt.close();
        conn.close();
    } catch (Exception e) {
        e.printStackTrace();
        javax.swing.JOptionPane.showMessageDialog(null, "Erro ao atualizar: " + e.getMessage());
    }         
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void btnDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletarActionPerformed
        // TODO add your handling code here:
      try {
            String codigo = txtCodigo.getText();

            Connection conn = Conexao.conectar();
            String sql = "DELETE FROM produtos WHERE codigo = ?";
            PreparedStatement stmt = conn.prepareStatement(sql);

            stmt.setString(1, codigo);

            int linhasAfetadas = stmt.executeUpdate();
            if (linhasAfetadas > 0) {
                javax.swing.JOptionPane.showMessageDialog(null, "Produto deletado com sucesso!");
            } else {
                javax.swing.JOptionPane.showMessageDialog(null, "Produto não encontrado para deletar.");
            }

            stmt.close();
            conn.close();

            // Limpar os campos após exclusão
            txtCategoria.setText("");
            txtCodigo.setText("");
            txtDescricao.setText("");
            txtQuantidade.setText("");
            txtPrecoUnitario.setText("");

        } catch (Exception e) {
            e.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(null, "Erro ao deletar: " + e.getMessage());
        }    
     
    }//GEN-LAST:event_btnDeletarActionPerformed

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntListar;
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnDeletar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaProdutos;
    private javax.swing.JTextField txtCategoria;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JTextField txtPrecoUnitario;
    private javax.swing.JTextField txtQuantidade;
    // End of variables declaration//GEN-END:variables
// End of variables declaration                   

    public static void main(String[] args) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new ProdutoForm().setVisible(true);
            }
        });
    }
     }


